  name: CI-CD FOR AWS-EB 

  on:
    push:
      branches:
        - dev
        - main

  env:
#    EB_PACK_S3_BUCKET_NAME: elasticbeanstalk-us-east-1-626517541844
#    EB_ENVNAME: Dev-env
#    DEPLOY_PACKAGENAME: { { github.sha } }.zip
#    AWS_REGION_NAME: us-east-1
#    EB_APPLICATION_VERSION: dev

    EB_PACK_S3_BUCKET_NAME: ${{secrets.s3_bucket_name}} #eb-flask-web
    EB_ENVNAME: ${{secrets.ebenvname}} #flask-web-dev
    DEPLOY_PACKAGENAME: ${{secrets.eb_packagename}}-${{github.sha}}.zip #flask-web-app
    AWS_REGION_NAME: ${{secrets.AWS_REGION_NAME}} #us-east-1
    EB_APPLICATION_VERSION: ${{ secrets.EB_APP_NAME }} #flask-web current_directory


  jobs:
    dev-ci:
      runs-on: ubuntu-latest
      steps:
        - name: Git clone repo
          uses: actions/checkout@v1
        
        - name: zip the s3 package
          run:  zip -r ${{env.DEPLOY_PACKAGENAME}} ./ -x *.git*  #flask-web-app

        - name: Config Aws Cred
          uses: aws-actions/configure-aws-credentials@v1
          with: 
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION_NAME }}

        - name:  Copy to s3
          run: |
            ls -al
            echo " copying the deploy package to s3 "
            aws s3 cp ${{ env.DEPLOY_PACKAGENAME }} s3://${{ env.EB_PACK_S3_BUCKET_NAME }}/
            echo " done "
        - name:  CI
          run: echo "DONE CI PART"
          
    dev-cd:
      runs-on: ubuntu-latest
      needs: [dev-ci]
      steps:
        - name: Config Aws Cred
          uses: aws-actions/configure-aws-credentials@v1
          with: 
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION_NAME }}


        - name: Deploy New App-Ver.
        #  run:  aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVNAME }} --version-label "Ver-${{ github.sha }}"
          run:  aws elasticbeanstalk update-environment --environment-name my-env --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=PARAM1,Value=ParamValue

        - name: Step To run on failure
          if: ${{ failure() }}
          run: |
            curl --request POST \
            --url https://https://api.squadcast.com/v2/incidents/api/b354e4b23608623b7c0e07481beb8fbba702c70f \
            --header 'content-type: application/json' \
            --data '{
                      "message": "This will be the incident message",
                      "description": "${{ github.run_id }} <- run id '''''This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n due to failure in run: _${{ github.run_id }}_.''''  ",
                      "status": "trigger",
                      "event_id": "6"
                    }'
##use when creating incident in squadcast using webhook

#
#        - name: Invoke deployment hook
#          uses: distributhor/workflow-webhook@v2
#          env:
#            webhook_url: ${{ secrets.WEBHOOK_URL }}
#            webhook_secret: ${{ secrets.WEBHOOK_SECRET }}

##use when creating ticket in jira
#
#      - name: Send mail
#        if: always()
#        uses: dawidd6/action-send-mail@v2
#        with:
#          server_address: smtp.gmail.com
#          server_port: 465
#          username: ${{ secrets.EMAIL_USERNAME }}
#          password: ${{ secrets.EMAIL_PASSWORD }}
#          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
#          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
#          to: alert@streamvector-inc.incidents.squadcast.com
#          # from email name
#          from: Tiger-Global-Bain




#For Automatic Cred.
        # - name: Deploy to EB
        #   uses: einaregilsson/beanstalk-deploy@v20
        #   with:
        #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     application_name: ${{ secrets.EB_APP_NAME }}
        #     environment_name: ${{secrets.ebenvname}}
        #     version_label: ${{ github.sha }}
        #     region: ${{ env.AWS_REGION_NAME }}
        #     deployment_package: ....


#For application Testing
# eb-flask-web
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - name: Update the dev code
#       run: ls -la
#     - name: Test with unittest
#       run: |
#         cd flask-web/
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         export PYTHONPATH=flask-web
#         echo Add other actions to build,
#         echo test, and deploy my project.
#     - name: 
#       run: |
#         ls -al


        # - name: new eb-version
        #   run:  |
        #       aws elasticbeanstalk create-application-version \
        #       --application-name ${{ env.EB_APPLICATION_VERSION }} \
        #       --source-bundle S3Bucket="${{ env.EB_PACK_S3_BUCKET_NAME }}", S3Key="${{ env.DEPLOY_PACKAGENAME }}" \
        #       --version-label "Ver-{{ github.sha }}"  \
        #       --description "CommitSHA-${{ github.sha }} "
        #       --auto-create-application